#!/usr/bin/python3
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

# Basic division test
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

# Matrix with float values
>>> matrix_divided([[1.0, 2.5], [3.75, 4.25]], 0.5)
[[2.0, 5.0], [7.5, 8.5]]

# Original matrix remains unchanged
>>> matrix
[[1, 2, 3], [4, 5, 6]]

# Matrix is not a list of lists
>>> matrix_divided([1, 2, 3], 2)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# Inner list contains a string
>>> matrix_divided([[1, 2], ["3", 4]], 2)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# Rows are of unequal length
>>> matrix_divided([[1, 2], [3, 4, 5]], 2)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size

# div is a string
>>> matrix_divided([[1, 2], [3, 4]], "a")
Traceback (most recent call last):
    ...
TypeError: div must be a number

# div is None
>>> matrix_divided([[1, 2], [3, 4]], None)
Traceback (most recent call last):
    ...
TypeError: div must be a number

# div is zero
>>> matrix_divided([[1, 2], [3, 4]], 0)
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero

# Division by negative number
>>> matrix_divided([[2, 4], [6, 8]], -2)
[[-1.0, -2.0], [-3.0, -4.0]]
